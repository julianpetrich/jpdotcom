###########
# BUILDER #
###########

FROM python:3.9.1-slim-buster as builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apt-get update \
    && apt-get -y install gcc \
    && apt-get clean

RUN pip install --upgrade pip
COPY requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

COPY . .
RUN pip install black flake8 isort bandit safety
RUN flake8 .
RUN black . --check --exclude=migrations
RUN isort --profile black . --check-only
RUN bandit .
RUN safety check

#########
# FINAL #
#########

FROM python:3.9.1-slim-buster

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

ARG DJANGO_DEBUG
ARG SECRET_KEY
ARG CLOUD_NAME
ARG CLOUD_API_KEY
ARG CLOUD_API_SECRET

ENV DJANGO_DEBUG=${DJANGO_DEBUG}
ENV SECRET_KEY=${SECRET_KEY}
ENV CLOUD_NAME=${CLOUD_NAME}
ENV CLOUD_API_KEY=${CLOUD_API_KEY}
ENV CLOUD_API_SECRET=${CLOUD_API_SECRET}

run echo ${CLOUD_NAME}
run echo ${SECRET_KEY}

RUN apt-get update \
    && apt-get -y install gcc \
    && apt-get clean

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

COPY . .

run python manage.py collectstatic --noinput

RUN adduser --disabled-password myuser
USER myuser

